{"version":3,"sources":["src/definition/accessors/ILogger.ts"],"names":[],"mappings":"","file":"ILogger.js","sourcesContent":["import { AppMethod } from '../metadata/AppMethod';\nimport { ILogEntry } from './ILogEntry';\n\n/**\n * This logger provides a way to log various levels to the entire system.\n * When used, the items passed in will be logged to the database. This will\n * allow people to easily see what happened (users) or debug what went wrong.\n */\nexport interface ILogger {\n    method: AppMethod;\n\n    debug(...items: Array<any>): void;\n    info(...items: Array<any>): void;\n    log(...items: Array<any>): void;\n    warn(...items: Array<any>): void;\n    error(...items: Array<any>): void;\n    success(...items: Array<any>): void;\n\n    /** Gets the entries logged. */\n    getEntries(): Array<ILogEntry>;\n    /** Gets the method which this logger is for. */\n    getMethod(): AppMethod;\n    /** Gets when this logger was constructed. */\n    getStartTime(): Date;\n    /** Gets the end time, usually Date.now(). */\n    getEndTime(): Date;\n    /** Gets the amount of time this was a logger, start - Date.now(). */\n    getTotalTime(): number;\n}\n"]}