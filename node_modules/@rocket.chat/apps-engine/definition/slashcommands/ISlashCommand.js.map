{"version":3,"sources":["src/definition/slashcommands/ISlashCommand.ts"],"names":[],"mappings":"","file":"ISlashCommand.js","sourcesContent":["import { IHttp, IModify, IPersistence, IRead } from '../accessors';\nimport { ISlashCommandPreview, ISlashCommandPreviewItem } from './ISlashCommandPreview';\nimport { SlashCommandContext } from './SlashCommandContext';\n\n/**\n * Represents a slash command that is being provided.\n */\nexport interface ISlashCommand {\n    /** The value which determines what the user types. */\n    command: string;\n    /** Example of the parameters or an i18n string. */\n    i18nParamsExample: string;\n    /** i18n string for the description of the command. */\n    i18nDescription: string;\n    /** Optional. Permission value required for the user to have to see/use it. */\n    permission?: string;\n    /** Lets the clients know that this command does provide preview results. */\n    providesPreview: boolean;\n    /**\n     * The function which gets called when a user enters the command.\n     *\n     * *Note*: This will not get called if a preview is defined and\n     * presented to the user and the user interacts with the preview.\n     * When that happens, the `executePreviewItem` function will be called.\n     */\n    executor(context: SlashCommandContext, read: IRead, modify: IModify, http: IHttp, persis: IPersistence): Promise<void>;\n    /**\n     * The function which gets called whenever a user starts typing the command and the `providesPreview` is set to true.\n     * Max amount returned to the client is 10 and no more, period.\n     */\n    previewer?(context: SlashCommandContext, read: IRead, modify: IModify, http: IHttp, persis: IPersistence): Promise<ISlashCommandPreview>;\n    /** The function which gets executed whenever a user selects a preview item. */\n    executePreviewItem?(item: ISlashCommandPreviewItem, context: SlashCommandContext,\n                        read: IRead, modify: IModify, http: IHttp, persis: IPersistence): Promise<void>;\n}\n"]}