{"version":3,"sources":["src/definition/settings/ISetting.ts"],"names":[],"mappings":"","file":"ISetting.js","sourcesContent":["import { SettingType } from './SettingType';\n\nexport interface ISetting {\n    /** The id of this setting. */\n    id: string;\n    /** Type of setting this is. */\n    type: SettingType;\n    /** What is the default value (allows a reset button). */\n    packageValue: any;\n    /** Will be the value of this setting. If nothing is set here, then the \"packageValue\" will be used. */\n    value?: any;\n    /** Whether this setting is required or not. */\n    required: boolean;\n    /** Whether this setting is a public setting or not - administrators can see ones which are not public but users can't. */\n    public: boolean;\n    /** Whether this setting should be hidden from the user/administrator's eyes (can't be hidden and required). */\n    hidden?: boolean;\n    /** The selectable values when the setting's type is \"select\". */\n    values?: Array<ISettingSelectValue>;\n    /** Whether the **string** type is several lines or just one line. */\n    multiline?: boolean;\n    /** The name of the section where to put this setting under. */\n    section?: string;\n    /** Name of the setting in the form of a i18n string. */\n    i18nLabel: string;\n    /** Description of the setting in the form of a i18n string. */\n    i18nDescription?: string;\n    /** An optional alert messages which is shown to the user on this setting. */\n    i18nAlert?: string;\n    /** An optional placeholder which will be shown in the form input field, should be an i18n string. */\n    i18nPlaceholder?: string;\n    /** Date in which this setting was created. */\n    createdAt?: Date;\n    /** The last time the setting was updated at. */\n    updatedAt?: Date;\n}\n\nexport interface ISettingSelectValue {\n    key: string;\n    i18nLabel: string;\n}\n"]}