{"version":3,"sources":["src/server/ProxiedApp.ts"],"names":[],"mappings":"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","file":"ProxiedApp.js","sourcesContent":["import * as vm from 'vm';\n\nimport { IAppAccessors, ILogger } from '../definition/accessors';\nimport { App } from '../definition/App';\nimport { AppStatus } from '../definition/AppStatus';\nimport { IApp } from '../definition/IApp';\nimport { AppMethod, IAppAuthorInfo, IAppInfo } from '../definition/metadata';\nimport { AppManager } from './AppManager';\nimport { NotEnoughMethodArgumentsError } from './errors';\nimport { AppConsole } from './logging';\nimport { IAppStorageItem } from './storage';\n\nexport class ProxiedApp implements IApp {\n    private previousStatus: AppStatus;\n\n    constructor(private readonly manager: AppManager,\n                private storageItem: IAppStorageItem,\n                private readonly app: App,\n                private readonly customRequire: (mod: string) => {}) {\n        this.previousStatus = storageItem.status;\n    }\n\n    public getApp(): App {\n        return this.app;\n    }\n\n    public getStorageItem(): IAppStorageItem {\n        return this.storageItem;\n    }\n\n    public setStorageItem(item: IAppStorageItem): void {\n        this.storageItem = item;\n    }\n\n    public getPreviousStatus(): AppStatus {\n        return this.previousStatus;\n    }\n\n    public getImplementationList(): { [inter: string]: boolean } {\n        return this.storageItem.implemented;\n    }\n\n    public hasMethod(method: AppMethod): boolean {\n        console.log('Checking:', method);\n        return typeof (this.app as any)[method] === 'function';\n    }\n\n    public makeContext(data: object): vm.Context {\n        return vm.createContext(Object.assign({}, {\n            require: this.customRequire,\n        }, data));\n    }\n\n    public setupLogger(method: AppMethod): AppConsole {\n        const logger = new AppConsole(method);\n        // Set the logger to our new one\n        (this.app as any).logger = logger;\n\n        return logger;\n    }\n\n    public runInContext(codeToRun: string, context: vm.Context): any {\n        return vm.runInContext(codeToRun, context, { timeout: 1000 });\n    }\n\n    public async call(method: AppMethod, ...args: Array<any>): Promise<any> {\n        if (typeof (this.app as any)[method] !== 'function') {\n            throw new Error(`The App ${this.app.getName()} (${this.app.getID()}`\n                + ` does not have the method: \"${method}\"`);\n        }\n\n        // tslint:disable-next-line\n        const methodDeclartion = (this.app as any)[method] as Function;\n        if (args.length < methodDeclartion.length) {\n            throw new NotEnoughMethodArgumentsError(method, methodDeclartion.length, args.length);\n        }\n\n        const logger = this.setupLogger(method);\n        logger.debug(`${method} is being called...`);\n\n        let result;\n        try {\n            // tslint:disable-next-line:max-line-length\n            result = await this.runInContext(`app.${method}.apply(app, args)`, this.makeContext({ app: this.app, args })) as Promise<any>;\n            logger.debug(`'${method}' was successfully called! The result is:`, result);\n        } catch (e) {\n            logger.error(e);\n            logger.debug(`'${method}' was unsuccessful.`);\n        }\n\n        this.manager.getLogStorage().storeEntries(this.getID(), logger);\n\n        return result;\n    }\n\n    public getStatus(): AppStatus {\n        return this.app.getStatus();\n    }\n\n    public async setStatus(status: AppStatus, silent?: boolean): Promise<void> {\n        await this.call(AppMethod.SETSTATUS, status);\n\n        if (!silent) {\n            await this.manager.getBridges().getAppActivationBridge().appStatusChanged(this, status);\n        }\n    }\n\n    public getName(): string {\n        return this.app.getName();\n    }\n\n    public getNameSlug(): string {\n        return this.app.getNameSlug();\n    }\n\n    public getID(): string {\n        return this.app.getID();\n    }\n\n    public getVersion(): string {\n        return this.app.getVersion();\n    }\n\n    public getDescription(): string {\n        return this.app.getDescription();\n    }\n\n    public getRequiredApiVersion(): string {\n        return this.app.getRequiredApiVersion();\n    }\n    public getAuthorInfo(): IAppAuthorInfo {\n        return this.app.getAuthorInfo();\n    }\n\n    public getInfo(): IAppInfo {\n        return this.app.getInfo();\n    }\n\n    public getLogger(): ILogger {\n        return this.app.getLogger();\n    }\n\n    public getAccessors(): IAppAccessors {\n        return this.app.getAccessors();\n    }\n}\n"]}