{"version":3,"sources":["src/server/storage/AppLogStorage.ts"],"names":[],"mappings":";;AAUA;IACI,YAA6B,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEzC,SAAS;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;CAQJ;AAbD,sCAaC","file":"AppLogStorage.js","sourcesContent":["import { ILoggerStorageEntry } from '../logging';\nimport { AppConsole } from '../logging/AppConsole';\n\nexport interface IAppLogStorageFindOptions {\n    sort?: { [field: string]: number };\n    skip?: number;\n    limit?: number;\n    fields?: { [field: string]: number };\n}\n\nexport abstract class AppLogStorage {\n    constructor(private readonly engine: string) { }\n\n    public getEngine() {\n        return this.engine;\n    }\n\n    public abstract async find(query: { [field: string]: any },\n                               options?: IAppLogStorageFindOptions): Promise<Array<ILoggerStorageEntry>>;\n\n    public abstract async storeEntries(appId: string, logger: AppConsole): Promise<ILoggerStorageEntry>;\n    public abstract async getEntriesFor(appId: string): Promise<Array<ILoggerStorageEntry>>;\n    public abstract async removeEntriesFor(appId: string): Promise<void>;\n}\n"]}