{"version":3,"sources":["src/server/misc/DisabledApp.ts"],"names":[],"mappings":";;;;;;;;;;AACA,8CAA2C;AAE3C,wDAAgE;AAChE,wCAAwC;AAExC,iBAAyB,SAAQ,SAAG;IACzB,MAAM,CAAC,SAAS,CAAC,IAAc,EAAE,MAAiB;QACrD,OAAO,IAAI,WAAW,CAAC,IAAI,EAAE,IAAI,oBAAU,CAAC,oBAAS,CAAC,YAAY,CAAC,EAAE,MAAM,CAAC,CAAC;IACjF,CAAC;IAED,YAAY,IAAc,EAAE,MAAe,EAAE,MAAiB;QAC1D,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAC3B,CAAC;IAEY,QAAQ;;YACjB,OAAO,KAAK,CAAC;QACjB,CAAC;KAAA;IAEM,SAAS;QACZ,OAAO,KAAK,CAAC,SAAS,EAAgB,CAAC;IAC3C,CAAC;CACJ;AAjBD,kCAiBC","file":"DisabledApp.js","sourcesContent":["import { ILogger } from '../../definition/accessors';\nimport { App } from '../../definition/App';\nimport { AppStatus } from '../../definition/AppStatus';\nimport { AppMethod, IAppInfo } from '../../definition/metadata';\nimport { AppConsole } from '../logging';\n\nexport class DisabledApp extends App {\n    public static createNew(info: IAppInfo, status: AppStatus): DisabledApp {\n        return new DisabledApp(info, new AppConsole(AppMethod._CONSTRUCTOR), status);\n    }\n\n    constructor(info: IAppInfo, logger: ILogger, status: AppStatus) {\n        super(info, logger);\n        this.setStatus(status);\n    }\n\n    public async onEnable(): Promise<boolean> {\n        return false;\n    }\n\n    public getLogger(): AppConsole {\n        return super.getLogger() as AppConsole;\n    }\n}\n"]}