{"version":3,"sources":["src/server/accessors/MessageExtender.ts"],"names":[],"mappings":";;AAEA,wDAAuE;AAEvE,iDAA8C;AAE9C;IAGI,YAAoB,GAAa;QAAb,QAAG,GAAH,GAAG,CAAU;QAC7B,IAAI,CAAC,IAAI,GAAG,qCAA0B,CAAC,OAAO,CAAC;QAE/C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;YACjC,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,KAAK,EAAsB,CAAC;SAC1D;IACL,CAAC;IAEM,cAAc,CAAC,GAAW,EAAE,KAAU;QACzC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE;YACxB,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,EAAE,CAAC;SAC9B;QAED,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;YAC5B,MAAM,IAAI,KAAK,CAAC,2DAA4D,GAAI,EAAE,CAAC,CAAC;SACvF;QAED,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QAEnC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,aAAa,CAAC,UAA8B;QAC/C,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEtC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,cAAc,CAAC,WAAsC;QACxD,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAEhE,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,UAAU;QACb,OAAO,qBAAS,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzC,CAAC;CACJ;AAxCD,0CAwCC","file":"MessageExtender.js","sourcesContent":["import { IMessageExtender } from '../../definition/accessors';\nimport { IMessage, IMessageAttachment } from '../../definition/messages';\nimport { RocketChatAssociationModel } from '../../definition/metadata';\n\nimport { Utilities } from '../misc/Utilities';\n\nexport class MessageExtender implements IMessageExtender {\n    public readonly kind: RocketChatAssociationModel.MESSAGE;\n\n    constructor(private msg: IMessage) {\n        this.kind = RocketChatAssociationModel.MESSAGE;\n\n        if (!Array.isArray(msg.attachments)) {\n            this.msg.attachments = new Array<IMessageAttachment>();\n        }\n    }\n\n    public addCustomField(key: string, value: any): IMessageExtender {\n        if (!this.msg.customFields) {\n            this.msg.customFields = {};\n        }\n\n        if (this.msg.customFields[key]) {\n            throw new Error(`The message already contains a custom field by the key: ${ key }`);\n        }\n\n        this.msg.customFields[key] = value;\n\n        return this;\n    }\n\n    public addAttachment(attachment: IMessageAttachment): IMessageExtender {\n        this.msg.attachments.push(attachment);\n\n        return this;\n    }\n\n    public addAttachments(attachments: Array<IMessageAttachment>): IMessageExtender {\n        this.msg.attachments = this.msg.attachments.concat(attachments);\n\n        return this;\n    }\n\n    public getMessage(): IMessage {\n        return Utilities.deepClone(this.msg);\n    }\n}\n"]}