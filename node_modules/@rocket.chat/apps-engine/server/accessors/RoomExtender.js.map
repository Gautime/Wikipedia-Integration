{"version":3,"sources":["src/server/accessors/RoomExtender.ts"],"names":[],"mappings":";;AACA,wDAAuE;AAIvE,iDAA8C;AAE9C;IAII,YAAoB,IAAW;QAAX,SAAI,GAAJ,IAAI,CAAO;QAC3B,IAAI,CAAC,IAAI,GAAG,qCAA0B,CAAC,IAAI,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,EAAS,CAAC;IACtC,CAAC;IAEM,cAAc,CAAC,GAAW,EAAE,KAAU;QACzC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;SAC/B;QAED,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;YAC7B,MAAM,IAAI,KAAK,CAAC,wDAAyD,GAAI,EAAE,CAAC,CAAC;SACpF;QAED,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QAEpC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,SAAS,CAAC,IAAW;QACxB,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,EAAE;YACxD,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;SACvD;QAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAExB,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,oBAAoB;QACvB,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAEM,+BAA+B;QAClC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IAC/C,CAAC;IAEM,OAAO;QACV,OAAO,qBAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1C,CAAC;CACJ;AA5CD,oCA4CC","file":"RoomExtender.js","sourcesContent":["import { IRoomExtender } from '../../definition/accessors';\nimport { RocketChatAssociationModel } from '../../definition/metadata';\nimport { IRoom } from '../../definition/rooms';\nimport { IUser } from '../../definition/users';\n\nimport { Utilities } from '../misc/Utilities';\n\nexport class RoomExtender implements IRoomExtender {\n    public kind: RocketChatAssociationModel.ROOM;\n    private members: Array<IUser>;\n\n    constructor(private room: IRoom) {\n        this.kind = RocketChatAssociationModel.ROOM;\n        this.members = new Array<IUser>();\n    }\n\n    public addCustomField(key: string, value: any): IRoomExtender {\n        if (!this.room.customFields) {\n            this.room.customFields = {};\n        }\n\n        if (this.room.customFields[key]) {\n            throw new Error(`The room already contains a custom field by the key: ${ key }`);\n        }\n\n        this.room.customFields[key] = value;\n\n        return this;\n    }\n\n    public addMember(user: IUser): IRoomExtender {\n        if (this.members.find((u) => u.username === user.username)) {\n            throw new Error('The user is already in the room.');\n        }\n\n        this.members.push(user);\n\n        return this;\n    }\n\n    public getMembersBeingAdded(): Array<IUser> {\n        return this.members;\n    }\n\n    public getUsernamesOfMembersBeingAdded(): Array<string> {\n        return this.members.map((u) => u.username);\n    }\n\n    public getRoom(): IRoom {\n        return Utilities.deepClone(this.room);\n    }\n}\n"]}