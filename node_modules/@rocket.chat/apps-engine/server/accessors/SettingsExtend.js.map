{"version":3,"sources":["src/server/accessors/SettingsExtend.ts"],"names":[],"mappings":";;;;;;;;;;AAKA;IACI,YAA6B,GAAe;QAAf,QAAG,GAAH,GAAG,CAAY;IAAI,CAAC;IAEpC,cAAc,CAAC,OAAiB;;YACzC,IAAI,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;gBAChD,gBAAgB;gBAChB,MAAM,GAAG,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;gBAElF,OAAO,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;gBAClC,OAAO,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;gBAC/B,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;gBAE1B,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC;gBAEzD,OAAO;aACV;YAED,OAAO,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;YAC/B,OAAO,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;YAC/B,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC;QAC7D,CAAC;KAAA;CACJ;AArBD,wCAqBC","file":"SettingsExtend.js","sourcesContent":["import { ProxiedApp } from '../ProxiedApp';\n\nimport { ISettingsExtend } from '../../definition/accessors';\nimport { ISetting } from '../../definition/settings';\n\nexport class SettingsExtend implements ISettingsExtend {\n    constructor(private readonly app: ProxiedApp) { }\n\n    public async provideSetting(setting: ISetting): Promise<void> {\n        if (this.app.getStorageItem().settings[setting.id]) {\n            // :see_no_evil:\n            const old = await Promise.resolve(this.app.getStorageItem().settings[setting.id]);\n\n            setting.createdAt = old.createdAt;\n            setting.updatedAt = new Date();\n            setting.value = old.value;\n\n            this.app.getStorageItem().settings[setting.id] = setting;\n\n            return;\n        }\n\n        setting.createdAt = new Date();\n        setting.updatedAt = new Date();\n        this.app.getStorageItem().settings[setting.id] = setting;\n    }\n}\n"]}