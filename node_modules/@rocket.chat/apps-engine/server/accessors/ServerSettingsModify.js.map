{"version":3,"sources":["src/server/accessors/ServerSettingsModify.ts"],"names":[],"mappings":";;;;;;;;;;AAKA;IACI,YAA6B,MAA4B,EAAmB,KAAa;QAA5D,WAAM,GAAN,MAAM,CAAsB;QAAmB,UAAK,GAAL,KAAK,CAAQ;IAAI,CAAC;IAEjF,SAAS,CAAC,IAAY;;YAC/B,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAClD,CAAC;KAAA;IAEY,WAAW,CAAC,EAAU;;YAC/B,MAAM,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAClD,CAAC;KAAA;IAEY,aAAa,CAAC,OAAiB;;YACxC,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACrD,CAAC;KAAA;CACJ;AAdD,oDAcC","file":"ServerSettingsModify.js","sourcesContent":["import { IServerSettingBridge } from '../bridges/IServerSettingBridge';\n\nimport { IServerSettingsModify } from '../../definition/accessors';\nimport { ISetting } from '../../definition/settings';\n\nexport class ServerSettingsModify implements IServerSettingsModify {\n    constructor(private readonly bridge: IServerSettingBridge, private readonly appId: string) { }\n\n    public async hideGroup(name: string): Promise<void> {\n        await this.bridge.hideGroup(name, this.appId);\n    }\n\n    public async hideSetting(id: string): Promise<void> {\n        await this.bridge.hideSetting(id, this.appId);\n    }\n\n    public async modifySetting(setting: ISetting): Promise<void> {\n        await this.bridge.updateOne(setting, this.appId);\n    }\n}\n"]}