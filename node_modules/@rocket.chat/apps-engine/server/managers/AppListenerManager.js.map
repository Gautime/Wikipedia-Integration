{"version":3,"sources":["src/server/managers/AppListenerManager.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,4CAA0F;AAE1F,0CAA2C;AAK3C,wDAAsD;AAGtD,iDAA8C;AAC9C,iDAA8C;AAC9C,wCAAqC;AAErC;IAII,YAA6B,OAAmB;QAAnB,YAAO,GAAP,OAAO,CAAY;QAC5C,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,kBAAkB,EAAE,CAAC;QACvC,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAyB,CAAC;QAElD,MAAM,CAAC,IAAI,CAAC,uBAAY,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,KAAK,EAAU,CAAC,CAAC,CAAC;IAC/F,CAAC;IAEM,iBAAiB,CAAC,GAAe;QACpC,MAAM,SAAS,GAAG,GAAG,CAAC,qBAAqB,EAAE,CAAC;QAC9C,KAAK,MAAM,GAAG,IAAI,GAAG,CAAC,qBAAqB,EAAE,EAAE;YAC3C,IAAI,SAAS,CAAC,GAAG,CAAC,EAAE;gBAChB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;aAC7C;SACJ;IACL,CAAC;IAEM,mBAAmB,CAAC,GAAe;QACtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;YACjC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE;gBAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;gBACxC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAC5C;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,YAAY,CAAC,GAAiB;QACjC,MAAM,OAAO,GAAG,IAAI,KAAK,EAAc,CAAC;QAExC,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACzC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;SAChD;QAED,OAAO,OAAO,CAAC;IACnB,CAAC;IAED,2BAA2B;IACd,eAAe,CAAC,GAAiB,EAAE,IAA8B;;YAC1E,QAAQ,GAAG,EAAE;gBACT,WAAW;gBACX,KAAK,uBAAY,CAAC,sBAAsB;oBACpC,OAAO,IAAI,CAAC,4BAA4B,CAAC,IAAgB,CAAC,CAAC;gBAC/D,KAAK,uBAAY,CAAC,qBAAqB;oBACnC,OAAO,IAAI,CAAC,2BAA2B,CAAC,IAAgB,CAAC,CAAC;gBAC9D,KAAK,uBAAY,CAAC,qBAAqB;oBACnC,OAAO,IAAI,CAAC,2BAA2B,CAAC,IAAgB,CAAC,CAAC;gBAC9D,KAAK,uBAAY,CAAC,gBAAgB;oBAC9B,IAAI,CAAC,sBAAsB,CAAC,IAAgB,CAAC,CAAC;oBAC9C,OAAO;gBACX,KAAK,uBAAY,CAAC,wBAAwB;oBACtC,OAAO,IAAI,CAAC,8BAA8B,CAAC,IAAgB,CAAC,CAAC;gBACjE,KAAK,uBAAY,CAAC,mBAAmB;oBACjC,IAAI,CAAC,wBAAwB,CAAC,IAAgB,CAAC,CAAC;oBAChD,OAAO;gBACX,KAAK,uBAAY,CAAC,yBAAyB;oBACvC,OAAO,IAAI,CAAC,+BAA+B,CAAC,IAAgB,CAAC,CAAC;gBAClE,KAAK,uBAAY,CAAC,wBAAwB;oBACtC,OAAO,IAAI,CAAC,8BAA8B,CAAC,IAAgB,CAAC,CAAC;gBACjE,KAAK,uBAAY,CAAC,wBAAwB;oBACtC,OAAO,IAAI,CAAC,8BAA8B,CAAC,IAAgB,CAAC,CAAC;gBACjE,KAAK,uBAAY,CAAC,mBAAmB;oBACjC,IAAI,CAAC,yBAAyB,CAAC,IAAgB,CAAC,CAAC;oBACjD,OAAO;gBACX,QAAQ;gBACR,KAAK,uBAAY,CAAC,qBAAqB;oBACnC,OAAO,IAAI,CAAC,2BAA2B,CAAC,IAAa,CAAC,CAAC;gBAC3D,KAAK,uBAAY,CAAC,oBAAoB;oBAClC,OAAO,IAAI,CAAC,0BAA0B,CAAC,IAAa,CAAC,CAAC;gBAC1D,KAAK,uBAAY,CAAC,oBAAoB;oBAClC,OAAO,IAAI,CAAC,0BAA0B,CAAC,IAAa,CAAC,CAAC;gBAC1D,KAAK,uBAAY,CAAC,eAAe;oBAC7B,IAAI,CAAC,qBAAqB,CAAC,IAAa,CAAC,CAAC;oBAC1C,OAAO;gBACX,KAAK,uBAAY,CAAC,qBAAqB;oBACnC,OAAO,IAAI,CAAC,2BAA2B,CAAC,IAAa,CAAC,CAAC;gBAC3D,KAAK,uBAAY,CAAC,gBAAgB;oBAC9B,IAAI,CAAC,sBAAsB,CAAC,IAAa,CAAC,CAAC;oBAC3C,OAAO;gBACX;oBACI,OAAO,CAAC,IAAI,CAAC,oEAAoE,CAAC,CAAC;oBACnF,OAAO;aACd;QACL,CAAC;KAAA;IAED,WAAW;IACG,4BAA4B,CAAC,IAAc;;YACrD,IAAI,SAAS,GAAG,KAAK,CAAC;YACtB,MAAM,KAAK,GAAG,IAAI,iBAAO,CAAC,qBAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAE5E,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAY,CAAC,sBAAsB,CAAC,EAAE;gBACzE,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,UAAU,GAAG,IAAI,CAAC;gBACtB,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,0BAA0B,CAAC,EAAE;oBACrD,UAAU,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,0BAA0B,EAC5D,KAAK,EACL,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CACd,CAAA,CAAC;iBAChB;gBAED,IAAI,UAAU,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,4BAA4B,CAAC,EAAE;oBACrE,SAAS,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,4BAA4B,EAC7D,KAAK,EACL,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CACrB,CAAA,CAAC;oBAEb,IAAI,SAAS,EAAE;wBACX,OAAO,SAAS,CAAC;qBACpB;iBACJ;aACJ;YAED,OAAO,SAAS,CAAC;QACrB,CAAC;KAAA;IAEa,2BAA2B,CAAC,IAAc;;YACpD,MAAM,GAAG,GAAG,IAAI,CAAC;YACjB,MAAM,KAAK,GAAG,IAAI,iBAAO,CAAC,qBAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAE5E,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAY,CAAC,qBAAqB,CAAC,EAAE;gBACxE,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,UAAU,GAAG,IAAI,CAAC;gBACtB,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,yBAAyB,CAAC,EAAE;oBACpD,UAAU,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,yBAAyB,EAC3D,KAAK,EACL,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CACV,CAAA,CAAC;iBACpB;gBAED,IAAI,UAAU,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,2BAA2B,CAAC,EAAE;oBACpE,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,2BAA2B,EAChD,KAAK,EACL,IAAI,2BAAe,CAAC,GAAG,CAAC,EAAE,oCAAoC;oBAC9D,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CAChC,CAAC;iBACL;aACJ;YAED,OAAO,GAAG,CAAC;QACf,CAAC;KAAA;IAEa,2BAA2B,CAAC,IAAc;;YACpD,IAAI,GAAG,GAAG,IAAI,CAAC;YACf,MAAM,KAAK,GAAG,IAAI,iBAAO,CAAC,qBAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAE5E,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAY,CAAC,qBAAqB,CAAC,EAAE;gBACxE,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,UAAU,GAAG,IAAI,CAAC;gBACtB,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,yBAAyB,CAAC,EAAE;oBACpD,UAAU,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,yBAAyB,EAC3D,KAAK,EACL,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CACd,CAAA,CAAC;iBAChB;gBAED,IAAI,UAAU,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,2BAA2B,CAAC,EAAE;oBACpE,GAAG,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,2BAA2B,EACtD,KAAK,EACL,IAAI,0BAAc,CAAC,GAAG,CAAC,EACvB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CACpB,CAAA,CAAC;iBACjB;aACJ;YAED,OAAO,IAAI,CAAC;QAChB,CAAC;KAAA;IAEa,sBAAsB,CAAC,IAAc;;YAC/C,MAAM,KAAK,GAAG,IAAI,iBAAO,CAAC,qBAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAE5E,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAY,CAAC,gBAAgB,CAAC,EAAE;gBACnE,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,UAAU,GAAG,IAAI,CAAC;gBACtB,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,oBAAoB,CAAC,EAAE;oBAC/C,UAAU,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,oBAAoB,EACtD,KAAK,EACL,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CACd,CAAA,CAAC;iBAChB;gBAED,IAAI,UAAU,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,sBAAsB,CAAC,EAAE;oBAC/D,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,sBAAsB,EAC3C,KAAK,EACL,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,EAC7B,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAC7B,CAAC;iBACL;aACJ;QACL,CAAC;KAAA;IAEa,8BAA8B,CAAC,IAAc;;YACvD,IAAI,SAAS,GAAG,KAAK,CAAC;YACtB,MAAM,KAAK,GAAG,IAAI,iBAAO,CAAC,qBAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAE5E,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAY,CAAC,wBAAwB,CAAC,EAAE;gBAC3E,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,UAAU,GAAG,IAAI,CAAC;gBACtB,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,4BAA4B,CAAC,EAAE;oBACvD,UAAU,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,4BAA4B,EAC9D,KAAK,EACL,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CACd,CAAA,CAAC;iBAChB;gBAED,IAAI,UAAU,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,8BAA8B,CAAC,EAAE;oBACvE,SAAS,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,8BAA8B,EAC/D,KAAK,EACL,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CACrB,CAAA,CAAC;oBAEb,IAAI,SAAS,EAAE;wBACX,OAAO,SAAS,CAAC;qBACpB;iBACJ;aACJ;YAED,OAAO,SAAS,CAAC;QACrB,CAAC;KAAA;IAEa,wBAAwB,CAAC,IAAc;;YACjD,MAAM,KAAK,GAAG,IAAI,iBAAO,CAAC,qBAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAE5E,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAY,CAAC,mBAAmB,CAAC,EAAE;gBACtE,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,UAAU,GAAG,IAAI,CAAC;gBACtB,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,uBAAuB,CAAC,EAAE;oBAClD,UAAU,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,uBAAuB,EACzD,KAAK,EACL,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CACd,CAAA,CAAC;iBAChB;gBAED,IAAI,UAAU,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,yBAAyB,CAAC,EAAE;oBAClE,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,yBAAyB,EAC9C,KAAK,EACL,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,EAC7B,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAC7B,CAAC;iBACL;aACJ;QACL,CAAC;KAAA;IAEa,+BAA+B,CAAC,IAAc;;YACxD,IAAI,SAAS,GAAG,KAAK,CAAC;YACtB,MAAM,KAAK,GAAG,IAAI,iBAAO,CAAC,qBAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAE5E,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAY,CAAC,yBAAyB,CAAC,EAAE;gBAC5E,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,UAAU,GAAG,IAAI,CAAC;gBACtB,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,6BAA6B,CAAC,EAAE;oBACxD,UAAU,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,6BAA6B,EAC/D,KAAK,EACL,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CACd,CAAA,CAAC;iBAChB;gBAED,IAAI,UAAU,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,+BAA+B,CAAC,EAAE;oBACxE,SAAS,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,+BAA+B,EAChE,KAAK,EACL,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CACrB,CAAA,CAAC;oBAEb,IAAI,SAAS,EAAE;wBACX,OAAO,SAAS,CAAC;qBACpB;iBACJ;aACJ;YAED,OAAO,SAAS,CAAC;QACrB,CAAC;KAAA;IAEa,8BAA8B,CAAC,IAAc;;YACvD,MAAM,GAAG,GAAG,IAAI,CAAC;YACjB,MAAM,KAAK,GAAG,IAAI,iBAAO,CAAC,qBAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAE5E,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAY,CAAC,wBAAwB,CAAC,EAAE;gBAC3E,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,UAAU,GAAG,IAAI,CAAC;gBACtB,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,4BAA4B,CAAC,EAAE;oBACvD,UAAU,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,4BAA4B,EAC9D,KAAK,EACL,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CACV,CAAA,CAAC;iBACpB;gBAED,IAAI,UAAU,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,8BAA8B,CAAC,EAAE;oBACvE,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,8BAA8B,EACnD,KAAK,EACL,IAAI,2BAAe,CAAC,GAAG,CAAC,EAAE,oCAAoC;oBAC9D,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CAChC,CAAC;iBACL;aACJ;YAED,OAAO,GAAG,CAAC;QACf,CAAC;KAAA;IAEa,8BAA8B,CAAC,IAAc;;YACvD,IAAI,GAAG,GAAG,IAAI,CAAC;YACf,MAAM,KAAK,GAAG,IAAI,iBAAO,CAAC,qBAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAE5E,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAY,CAAC,wBAAwB,CAAC,EAAE;gBAC3E,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,UAAU,GAAG,IAAI,CAAC;gBACtB,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,4BAA4B,CAAC,EAAE;oBACvD,UAAU,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,4BAA4B,EAC9D,KAAK,EACL,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CACd,CAAA,CAAC;iBAChB;gBAED,IAAI,UAAU,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,8BAA8B,CAAC,EAAE;oBACvE,GAAG,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,8BAA8B,EACzD,KAAK,EACL,IAAI,0BAAc,CAAC,GAAG,CAAC,EACvB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CACpB,CAAA,CAAC;iBACjB;aACJ;YAED,OAAO,IAAI,CAAC;QAChB,CAAC;KAAA;IAEa,yBAAyB,CAAC,IAAc;;YAClD,MAAM,KAAK,GAAG,IAAI,iBAAO,CAAC,qBAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAE5E,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAY,CAAC,mBAAmB,CAAC,EAAE;gBACtE,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,UAAU,GAAG,IAAI,CAAC;gBACtB,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,uBAAuB,CAAC,EAAE;oBAClD,UAAU,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,uBAAuB,EACzD,KAAK,EACL,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CACd,CAAA,CAAC;iBAChB;gBAED,IAAI,UAAU,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,yBAAyB,CAAC,EAAE;oBAClE,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,yBAAyB,EAC9C,KAAK,EACL,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,EAC7B,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAC7B,CAAC;iBACL;aACJ;QACL,CAAC;KAAA;IAED,QAAQ;IACM,2BAA2B,CAAC,IAAW;;YACjD,MAAM,MAAM,GAAG,IAAI,WAAI,CAAC,qBAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1E,IAAI,SAAS,GAAG,KAAK,CAAC;YAEtB,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAY,CAAC,qBAAqB,CAAC,EAAE;gBACxE,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,UAAU,GAAG,IAAI,CAAC;gBACtB,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,yBAAyB,CAAC,EAAE;oBACpD,UAAU,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,yBAAyB,EAC3D,MAAM,EACN,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CACd,CAAA,CAAC;iBAChB;gBAED,IAAI,UAAU,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,2BAA2B,CAAC,EAAE;oBACpE,SAAS,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,2BAA2B,EAC5D,MAAM,EACN,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CACrB,CAAA,CAAC;oBAEb,IAAI,SAAS,EAAE;wBACX,OAAO,SAAS,CAAC;qBACpB;iBACJ;aACJ;YAED,OAAO,SAAS,CAAC;QACrB,CAAC;KAAA;IAEa,0BAA0B,CAAC,IAAW;;YAChD,MAAM,IAAI,GAAG,IAAI,CAAC;YAClB,MAAM,MAAM,GAAG,IAAI,WAAI,CAAC,qBAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAE1E,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAY,CAAC,oBAAoB,CAAC,EAAE;gBACvE,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,UAAU,GAAG,IAAI,CAAC;gBACtB,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,wBAAwB,CAAC,EAAE;oBACnD,UAAU,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,wBAAwB,EAC1D,MAAM,EACN,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CACd,CAAA,CAAC;iBAChB;gBAED,IAAI,UAAU,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,0BAA0B,CAAC,EAAE;oBACnE,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,0BAA0B,EAC/C,MAAM,EACN,IAAI,wBAAY,CAAC,IAAI,CAAC,EAAE,oCAAoC;oBAC5D,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CAChC,CAAC;iBACL;aACJ;YAED,OAAO,IAAI,CAAC;QAChB,CAAC;KAAA;IAEa,0BAA0B,CAAC,IAAW;;YAChD,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,MAAM,MAAM,GAAG,IAAI,WAAI,CAAC,qBAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAE1E,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAY,CAAC,oBAAoB,CAAC,EAAE;gBACvE,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,UAAU,GAAG,IAAI,CAAC;gBACtB,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,wBAAwB,CAAC,EAAE;oBACnD,UAAU,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,wBAAwB,EAC1D,MAAM,EACN,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CACd,CAAA,CAAC;iBAChB;gBAED,IAAI,UAAU,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,0BAA0B,CAAC,EAAE;oBACnE,IAAI,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,0BAA0B,EACtD,MAAM,EACN,IAAI,uBAAW,CAAC,IAAI,CAAC,EACrB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CACvB,CAAA,CAAC;iBACd;aACJ;YAED,OAAO,IAAI,CAAC;QAChB,CAAC;KAAA;IAEa,qBAAqB,CAAC,IAAW;;YAC3C,MAAM,MAAM,GAAG,IAAI,WAAI,CAAC,qBAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAE1E,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAY,CAAC,eAAe,CAAC,EAAE;gBAClE,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,UAAU,GAAG,IAAI,CAAC;gBACtB,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,mBAAmB,CAAC,EAAE;oBAC9C,UAAU,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,mBAAmB,EACrD,MAAM,EACN,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CACd,CAAA,CAAC;iBAChB;gBAED,IAAI,UAAU,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,qBAAqB,CAAC,EAAE;oBAC9D,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,qBAAqB,EAC1C,MAAM,EACN,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CAChC,CAAC;iBACL;aACJ;QACL,CAAC;KAAA;IAEa,2BAA2B,CAAC,IAAW;;YACjD,MAAM,MAAM,GAAG,IAAI,WAAI,CAAC,qBAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1E,IAAI,SAAS,GAAG,KAAK,CAAC;YAEtB,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAY,CAAC,qBAAqB,CAAC,EAAE;gBACxE,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,UAAU,GAAG,IAAI,CAAC;gBACtB,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,yBAAyB,CAAC,EAAE;oBACpD,UAAU,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,yBAAyB,EAC3D,MAAM,EACN,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CACd,CAAA,CAAC;iBAChB;gBAED,IAAI,UAAU,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,2BAA2B,CAAC,EAAE;oBACpE,SAAS,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,2BAA2B,EAC5D,MAAM,EACN,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CACrB,CAAA,CAAC;oBAEb,IAAI,SAAS,EAAE;wBACX,OAAO,SAAS,CAAC;qBACpB;iBACJ;aACJ;YAED,OAAO,SAAS,CAAC;QACrB,CAAC;KAAA;IAEa,sBAAsB,CAAC,IAAW;;YAC5C,MAAM,MAAM,GAAG,IAAI,WAAI,CAAC,qBAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAE1E,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAY,CAAC,gBAAgB,CAAC,EAAE;gBACnE,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,UAAU,GAAG,IAAI,CAAC;gBACtB,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,oBAAoB,CAAC,EAAE;oBAC/C,UAAU,IAAG,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,oBAAoB,EACtD,MAAM,EACN,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CACd,CAAA,CAAC;iBAChB;gBAED,IAAI,UAAU,IAAI,GAAG,CAAC,SAAS,CAAC,oBAAS,CAAC,sBAAsB,CAAC,EAAE;oBAC/D,MAAM,GAAG,CAAC,IAAI,CAAC,oBAAS,CAAC,sBAAsB,EAC3C,MAAM,EACN,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EACtB,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CAChC,CAAC;iBACL;aACJ;QACL,CAAC;KAAA;CACJ;AAtjBD,gDAsjBC","file":"AppListenerManager.js","sourcesContent":["import { MessageBuilder, MessageExtender, RoomBuilder, RoomExtender } from '../accessors';\nimport { AppManager } from '../AppManager';\nimport { AppInterface } from '../compiler';\nimport { ProxiedApp } from '../ProxiedApp';\nimport { AppAccessorManager } from './AppAccessorManager';\n\nimport { IMessage } from '../../definition/messages';\nimport { AppMethod } from '../../definition/metadata';\nimport { IRoom } from '../../definition/rooms';\nimport { IUser } from '../../definition/users';\nimport { Message } from '../messages/Message';\nimport { Utilities } from '../misc/Utilities';\nimport { Room } from '../rooms/Room';\n\nexport class AppListenerManager {\n    private am: AppAccessorManager;\n    private listeners: Map<string, Array<string>>;\n\n    constructor(private readonly manager: AppManager) {\n        this.am = manager.getAccessorManager();\n        this.listeners = new Map<string, Array<string>>();\n\n        Object.keys(AppInterface).forEach((intt) => this.listeners.set(intt, new Array<string>()));\n    }\n\n    public registerListeners(app: ProxiedApp): void {\n        const impleList = app.getImplementationList();\n        for (const int in app.getImplementationList()) {\n            if (impleList[int]) {\n                this.listeners.get(int).push(app.getID());\n            }\n        }\n    }\n\n    public unregisterListeners(app: ProxiedApp): void {\n        this.listeners.forEach((apps, int) => {\n            if (apps.includes(app.getID())) {\n                const where = apps.indexOf(app.getID());\n                this.listeners.get(int).splice(where, 1);\n            }\n        });\n    }\n\n    public getListeners(int: AppInterface): Array<ProxiedApp> {\n        const results = new Array<ProxiedApp>();\n\n        for (const appId of this.listeners.get(int)) {\n            results.push(this.manager.getOneById(appId));\n        }\n\n        return results;\n    }\n\n    // tslint:disable-next-line\n    public async executeListener(int: AppInterface, data: IMessage | IRoom | IUser): Promise<void | boolean | IMessage | IRoom | IUser> {\n        switch (int) {\n            // Messages\n            case AppInterface.IPreMessageSentPrevent:\n                return this.executePreMessageSentPrevent(data as IMessage);\n            case AppInterface.IPreMessageSentExtend:\n                return this.executePreMessageSentExtend(data as IMessage);\n            case AppInterface.IPreMessageSentModify:\n                return this.executePreMessageSentModify(data as IMessage);\n            case AppInterface.IPostMessageSent:\n                this.executePostMessageSent(data as IMessage);\n                return;\n            case AppInterface.IPreMessageDeletePrevent:\n                return this.executePreMessageDeletePrevent(data as IMessage);\n            case AppInterface.IPostMessageDeleted:\n                this.executePostMessageDelete(data as IMessage);\n                return;\n            case AppInterface.IPreMessageUpdatedPrevent:\n                return this.executePreMessageUpdatedPrevent(data as IMessage);\n            case AppInterface.IPreMessageUpdatedExtend:\n                return this.executePreMessageUpdatedExtend(data as IMessage);\n            case AppInterface.IPreMessageUpdatedModify:\n                return this.executePreMessageUpdatedModify(data as IMessage);\n            case AppInterface.IPostMessageUpdated:\n                this.executePostMessageUpdated(data as IMessage);\n                return;\n            // Rooms\n            case AppInterface.IPreRoomCreatePrevent:\n                return this.executePreRoomCreatePrevent(data as IRoom);\n            case AppInterface.IPreRoomCreateExtend:\n                return this.executePreRoomCreateExtend(data as IRoom);\n            case AppInterface.IPreRoomCreateModify:\n                return this.executePreRoomCreateModify(data as IRoom);\n            case AppInterface.IPostRoomCreate:\n                this.executePostRoomCreate(data as IRoom);\n                return;\n            case AppInterface.IPreRoomDeletePrevent:\n                return this.executePreRoomDeletePrevent(data as IRoom);\n            case AppInterface.IPostRoomDeleted:\n                this.executePostRoomDeleted(data as IRoom);\n                return;\n            default:\n                console.warn('Unimplemented (or invalid) AppInterface was just tried to execute.');\n                return;\n        }\n    }\n\n    // Messages\n    private async executePreMessageSentPrevent(data: IMessage): Promise<boolean> {\n        let prevented = false;\n        const cfMsg = new Message(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPreMessageSentPrevent)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREMESSAGESENTPREVENT)) {\n                continueOn = await app.call(AppMethod.CHECKPREMESSAGESENTPREVENT,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREMESSAGESENTPREVENT)) {\n                prevented = await app.call(AppMethod.EXECUTEPREMESSAGESENTPREVENT,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                ) as boolean;\n\n                if (prevented) {\n                    return prevented;\n                }\n            }\n        }\n\n        return prevented;\n    }\n\n    private async executePreMessageSentExtend(data: IMessage): Promise<IMessage> {\n        const msg = data;\n        const cfMsg = new Message(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPreMessageSentExtend)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREMESSAGESENTEXTEND)) {\n                continueOn = await app.call(AppMethod.CHECKPREMESSAGESENTEXTEND,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREMESSAGESENTEXTEND)) {\n                await app.call(AppMethod.EXECUTEPREMESSAGESENTEXTEND,\n                    cfMsg,\n                    new MessageExtender(msg), // This mutates the passed in object\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                );\n            }\n        }\n\n        return msg;\n    }\n\n    private async executePreMessageSentModify(data: IMessage): Promise<IMessage> {\n        let msg = data;\n        const cfMsg = new Message(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPreMessageSentModify)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREMESSAGESENTMODIFY)) {\n                continueOn = await app.call(AppMethod.CHECKPREMESSAGESENTMODIFY,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREMESSAGESENTMODIFY)) {\n                msg = await app.call(AppMethod.EXECUTEPREMESSAGESENTMODIFY,\n                    cfMsg,\n                    new MessageBuilder(msg),\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                ) as IMessage;\n            }\n        }\n\n        return data;\n    }\n\n    private async executePostMessageSent(data: IMessage): Promise<void> {\n        const cfMsg = new Message(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPostMessageSent)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPOSTMESSAGESENT)) {\n                continueOn = await app.call(AppMethod.CHECKPOSTMESSAGESENT,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPOSTMESSAGESENT)) {\n                await app.call(AppMethod.EXECUTEPOSTMESSAGESENT,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                    this.am.getModifier(appId),\n                );\n            }\n        }\n    }\n\n    private async executePreMessageDeletePrevent(data: IMessage): Promise<boolean> {\n        let prevented = false;\n        const cfMsg = new Message(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPreMessageDeletePrevent)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREMESSAGEDELETEPREVENT)) {\n                continueOn = await app.call(AppMethod.CHECKPREMESSAGEDELETEPREVENT,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREMESSAGEDELETEPREVENT)) {\n                prevented = await app.call(AppMethod.EXECUTEPREMESSAGEDELETEPREVENT,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                ) as boolean;\n\n                if (prevented) {\n                    return prevented;\n                }\n            }\n        }\n\n        return prevented;\n    }\n\n    private async executePostMessageDelete(data: IMessage): Promise<void> {\n        const cfMsg = new Message(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPostMessageDeleted)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPOSTMESSAGEDELETED)) {\n                continueOn = await app.call(AppMethod.CHECKPOSTMESSAGEDELETED,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPOSTMESSAGEDELETED)) {\n                await app.call(AppMethod.EXECUTEPOSTMESSAGEDELETED,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                    this.am.getModifier(appId),\n                );\n            }\n        }\n    }\n\n    private async executePreMessageUpdatedPrevent(data: IMessage): Promise<boolean> {\n        let prevented = false;\n        const cfMsg = new Message(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPreMessageUpdatedPrevent)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREMESSAGEUPDATEDPREVENT)) {\n                continueOn = await app.call(AppMethod.CHECKPREMESSAGEUPDATEDPREVENT,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREMESSAGEUPDATEDPREVENT)) {\n                prevented = await app.call(AppMethod.EXECUTEPREMESSAGEUPDATEDPREVENT,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                ) as boolean;\n\n                if (prevented) {\n                    return prevented;\n                }\n            }\n        }\n\n        return prevented;\n    }\n\n    private async executePreMessageUpdatedExtend(data: IMessage): Promise<IMessage> {\n        const msg = data;\n        const cfMsg = new Message(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPreMessageUpdatedExtend)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREMESSAGEUPDATEDEXTEND)) {\n                continueOn = await app.call(AppMethod.CHECKPREMESSAGEUPDATEDEXTEND,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREMESSAGEUPDATEDEXTEND)) {\n                await app.call(AppMethod.EXECUTEPREMESSAGEUPDATEDEXTEND,\n                    cfMsg,\n                    new MessageExtender(msg), // This mutates the passed in object\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                );\n            }\n        }\n\n        return msg;\n    }\n\n    private async executePreMessageUpdatedModify(data: IMessage): Promise<IMessage> {\n        let msg = data;\n        const cfMsg = new Message(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPreMessageUpdatedModify)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREMESSAGEUPDATEDMODIFY)) {\n                continueOn = await app.call(AppMethod.CHECKPREMESSAGEUPDATEDMODIFY,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREMESSAGEUPDATEDMODIFY)) {\n                msg = await app.call(AppMethod.EXECUTEPREMESSAGEUPDATEDMODIFY,\n                    cfMsg,\n                    new MessageBuilder(msg),\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                ) as IMessage;\n            }\n        }\n\n        return data;\n    }\n\n    private async executePostMessageUpdated(data: IMessage): Promise<void> {\n        const cfMsg = new Message(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPostMessageUpdated)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPOSTMESSAGEUPDATED)) {\n                continueOn = await app.call(AppMethod.CHECKPOSTMESSAGEUPDATED,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPOSTMESSAGEUPDATED)) {\n                await app.call(AppMethod.EXECUTEPOSTMESSAGEUPDATED,\n                    cfMsg,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                    this.am.getModifier(appId),\n                );\n            }\n        }\n    }\n\n    // Rooms\n    private async executePreRoomCreatePrevent(data: IRoom): Promise<boolean> {\n        const cfRoom = new Room(Utilities.deepCloneAndFreeze(data), this.manager);\n        let prevented = false;\n\n        for (const appId of this.listeners.get(AppInterface.IPreRoomCreatePrevent)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREROOMCREATEPREVENT)) {\n                continueOn = await app.call(AppMethod.CHECKPREROOMCREATEPREVENT,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREROOMCREATEPREVENT)) {\n                prevented = await app.call(AppMethod.EXECUTEPREROOMCREATEPREVENT,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                ) as boolean;\n\n                if (prevented) {\n                    return prevented;\n                }\n            }\n        }\n\n        return prevented;\n    }\n\n    private async executePreRoomCreateExtend(data: IRoom): Promise<IRoom> {\n        const room = data;\n        const cfRoom = new Room(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPreRoomCreateExtend)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREROOMCREATEEXTEND)) {\n                continueOn = await app.call(AppMethod.CHECKPREROOMCREATEEXTEND,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREROOMCREATEEXTEND)) {\n                await app.call(AppMethod.EXECUTEPREROOMCREATEEXTEND,\n                    cfRoom,\n                    new RoomExtender(room), // This mutates the passed in object\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                );\n            }\n        }\n\n        return data;\n    }\n\n    private async executePreRoomCreateModify(data: IRoom): Promise<IRoom> {\n        let room = data;\n        const cfRoom = new Room(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPreRoomCreateModify)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREROOMCREATEMODIFY)) {\n                continueOn = await app.call(AppMethod.CHECKPREROOMCREATEMODIFY,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREROOMCREATEMODIFY)) {\n                room = await app.call(AppMethod.EXECUTEPREROOMCREATEMODIFY,\n                    cfRoom,\n                    new RoomBuilder(room),\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                ) as IRoom;\n            }\n        }\n\n        return data;\n    }\n\n    private async executePostRoomCreate(data: IRoom): Promise<void> {\n        const cfRoom = new Room(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPostRoomCreate)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPOSTROOMCREATE)) {\n                continueOn = await app.call(AppMethod.CHECKPOSTROOMCREATE,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPOSTROOMCREATE)) {\n                await app.call(AppMethod.EXECUTEPOSTROOMCREATE,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                );\n            }\n        }\n    }\n\n    private async executePreRoomDeletePrevent(data: IRoom): Promise<boolean> {\n        const cfRoom = new Room(Utilities.deepCloneAndFreeze(data), this.manager);\n        let prevented = false;\n\n        for (const appId of this.listeners.get(AppInterface.IPreRoomDeletePrevent)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPREROOMDELETEPREVENT)) {\n                continueOn = await app.call(AppMethod.CHECKPREROOMDELETEPREVENT,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPREROOMDELETEPREVENT)) {\n                prevented = await app.call(AppMethod.EXECUTEPREROOMDELETEPREVENT,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                ) as boolean;\n\n                if (prevented) {\n                    return prevented;\n                }\n            }\n        }\n\n        return prevented;\n    }\n\n    private async executePostRoomDeleted(data: IRoom): Promise<void> {\n        const cfRoom = new Room(Utilities.deepCloneAndFreeze(data), this.manager);\n\n        for (const appId of this.listeners.get(AppInterface.IPostRoomDeleted)) {\n            const app = this.manager.getOneById(appId);\n\n            let continueOn = true;\n            if (app.hasMethod(AppMethod.CHECKPOSTROOMDELETED)) {\n                continueOn = await app.call(AppMethod.CHECKPOSTROOMDELETED,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                ) as boolean;\n            }\n\n            if (continueOn && app.hasMethod(AppMethod.EXECUTEPOSTROOMDELETED)) {\n                await app.call(AppMethod.EXECUTEPOSTROOMDELETED,\n                    cfRoom,\n                    this.am.getReader(appId),\n                    this.am.getHttp(appId),\n                    this.am.getPersistence(appId),\n                );\n            }\n        }\n    }\n}\n"]}