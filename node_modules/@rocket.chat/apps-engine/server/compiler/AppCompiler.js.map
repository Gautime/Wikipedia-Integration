{"version":3,"sources":["src/server/compiler/AppCompiler.ts"],"names":[],"mappings":"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","file":"AppCompiler.js","sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport * as ts from 'typescript';\nimport * as vm from 'vm';\n\nimport { App } from '../../definition/App';\nimport { AppMethod, IAppInfo } from '../../definition/metadata';\nimport { AppAccessors } from '../accessors';\nimport { AppManager } from '../AppManager';\nimport { CompilerError, MustContainFunctionError, MustExtendAppError } from '../errors';\nimport { AppConsole } from '../logging';\nimport { Utilities } from '../misc/Utilities';\nimport { ProxiedApp } from '../ProxiedApp';\nimport { IAppStorageItem } from '../storage/IAppStorageItem';\nimport { AppImplements } from './AppImplements';\nimport { ICompilerError } from './ICompilerError';\nimport { ICompilerFile } from './ICompilerFile';\nimport { ICompilerResult } from './ICompilerResult';\n\nexport class AppCompiler {\n    private readonly compilerOptions: ts.CompilerOptions;\n    private libraryFiles: { [s: string]: ICompilerFile };\n\n    constructor() {\n        this.compilerOptions = {\n            target: ts.ScriptTarget.ES2017,\n            module: ts.ModuleKind.CommonJS,\n            moduleResolution: ts.ModuleResolutionKind.NodeJs,\n            declaration: false,\n            noImplicitAny: false,\n            removeComments: true,\n            strictNullChecks: true,\n            noImplicitReturns: true,\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true,\n            // Set this to true if you would like to see the module resolution process\n            traceResolution: false,\n        };\n\n        this.libraryFiles = {};\n    }\n\n    public storageFilesToCompiler(files: { [key: string]: string }): { [key: string]: ICompilerFile } {\n        const result: { [key: string]: ICompilerFile } = {};\n\n        Object.keys(files).forEach((key) => {\n            const name = key.replace(/\\$/g, '.');\n            result[name] = {\n                name,\n                content: files[key],\n                version: 0,\n                compiled: files[key],\n            };\n        });\n\n        return result;\n    }\n\n    public getLibraryFile(fileName: string): ICompilerFile {\n        if (!fileName.endsWith('.d.ts')) {\n            return undefined;\n        }\n\n        const norm = path.normalize(fileName);\n\n        if (this.libraryFiles[norm]) {\n            return this.libraryFiles[norm];\n        }\n\n        if (!fs.existsSync(fileName)) {\n            return undefined;\n        }\n\n        this.libraryFiles[norm] = {\n            name: norm,\n            content: fs.readFileSync(fileName).toString(),\n            version: 0,\n        };\n\n        return this.libraryFiles[norm];\n    }\n\n    public resolvePath(\n        containingFile: string,\n        moduleName: string,\n        cwd: string,\n    ): string {\n        const currentFolderPath = path.dirname(containingFile).replace(cwd.replace(/\\/$/, ''), '');\n        const modulePath = path.join(currentFolderPath, moduleName);\n\n        // Let's ensure we search for the App's modules first\n        const transformedModule = Utilities.transformModuleForCustomRequire(modulePath);\n        if (transformedModule) {\n            return transformedModule;\n        }\n    }\n\n    public resolver(\n        moduleName: string,\n        resolvedModules: Array<ts.ResolvedModule>,\n        containingFile: string,\n        result: ICompilerResult,\n        cwd: string,\n        moduleResHost: ts.ModuleResolutionHost,\n    ) {\n        // Keep compatibility with apps importing apps-ts-definition\n        moduleName = moduleName.replace(/@rocket.chat\\/apps-ts-definition\\//, '@rocket.chat/apps-engine/definition/');\n\n        if (Utilities.allowedInternalModuleRequire(moduleName)) {\n            return resolvedModules.push({ resolvedFileName: moduleName + '.js' });\n        }\n\n        const resolvedPath = this.resolvePath(containingFile, moduleName, cwd);\n        if (result.files[resolvedPath]) {\n            return resolvedModules.push({ resolvedFileName: resolvedPath });\n        }\n\n        // Now, let's try the \"standard\" resolution but with our little twist on it\n        const rs = ts.resolveModuleName(moduleName, containingFile, this.compilerOptions, moduleResHost);\n        if (rs.resolvedModule) {\n            return resolvedModules.push(rs.resolvedModule);\n        }\n\n        console.log(`Failed to resolve module: ${ moduleName }`);\n    }\n\n    /**\n     * Attempts to compile the TypeScript down into JavaScript which we can understand.\n     * It returns the files, what the App implements, and whether there are errors or not.\n     *\n     * @param info the App's information (name, version, etc)\n     * @param theFiles the actual files to try and compile\n     * @returns the results of trying to compile, including errors\n     */\n    public toJs(info: IAppInfo, theFiles: { [s: string]: ICompilerFile }): ICompilerResult {\n        if (!theFiles || !theFiles[info.classFile] || !this.isValidFile(theFiles[info.classFile])) {\n            throw new Error(`Invalid App package. Could not find the classFile (${info.classFile}) file.`);\n        }\n\n        const result: ICompilerResult = {\n            files: theFiles,\n            implemented: new AppImplements(),\n            compilerErrors: new Array<ICompilerError>(),\n        };\n\n        // Verify all file names are normalized\n        // and that the files are valid\n        Object.keys(result.files).forEach((key) => {\n            if (!this.isValidFile(result.files[key])) {\n                throw new Error(`Invalid TypeScript file in the App ${info.name} in the file \"${key}\".`);\n            }\n\n            result.files[key].name = path.normalize(result.files[key].name);\n        });\n\n        // Our \"current working directory\" needs to be adjusted for module resolution\n        const cwd = __dirname.includes('node_modules/@rocket.chat/apps-engine')\n            ? __dirname.split('node_modules/@rocket.chat/apps-engine')[0] : process.cwd();\n\n        const host: ts.LanguageServiceHost = {\n            getScriptFileNames: () => Object.keys(result.files),\n            getScriptVersion: (fileName) => {\n                fileName = path.normalize(fileName);\n                const file = result.files[fileName] || this.getLibraryFile(fileName);\n                return file && file.version.toString();\n            },\n            getScriptSnapshot: (fileName) => {\n                fileName = path.normalize(fileName);\n                const file = result.files[fileName] || this.getLibraryFile(fileName);\n\n                if (!file || !file.content) {\n                    return;\n                }\n\n                return ts.ScriptSnapshot.fromString(file.content);\n            },\n            getCompilationSettings: () => this.compilerOptions,\n            getCurrentDirectory: () => cwd,\n            getDefaultLibFileName: (options) => ts.getDefaultLibFilePath(this.compilerOptions),\n            fileExists: (fileName: string): boolean => {\n                return ts.sys.fileExists(fileName);\n            },\n            readFile: (fileName: string): string | undefined => {\n                return ts.sys.readFile(fileName);\n            },\n            resolveModuleNames: (moduleNames: Array<string>, containingFile: string): Array<ts.ResolvedModule> => {\n                const resolvedModules = new Array<ts.ResolvedModule>();\n                // tslint:disable-next-line\n                const moduleResHost: ts.ModuleResolutionHost = { fileExists: host.fileExists, readFile: host.readFile, trace: (traceDetail) => console.log(traceDetail) };\n\n                for (const moduleName of moduleNames) {\n                    this.resolver(moduleName, resolvedModules, containingFile, result, cwd, moduleResHost);\n                }\n\n                if (moduleNames.length > resolvedModules.length) {\n                    const failedCount = moduleNames.length - resolvedModules.length;\n                    console.log(`Failed to resolved ${ failedCount } modules for ${ info.name } v${ info.version }!`);\n                }\n\n                return resolvedModules;\n            },\n        };\n\n        const languageService = ts.createLanguageService(host, ts.createDocumentRegistry());\n\n        const coDiag = languageService.getCompilerOptionsDiagnostics();\n        if (coDiag.length !== 0) {\n            console.log(coDiag);\n\n            console.error('A VERY UNEXPECTED ERROR HAPPENED THAT SHOULD NOT!');\n            console.error('Please report this error with a screenshot of the logs. ' +\n                `Also, please email a copy of the App being installed/updated: ${ info.name } v${ info.version } (${ info.id })`);\n\n            throw new CompilerError(`Language Service's Compiler Options Diagnostics contains ${ coDiag.length } diagnostics.`);\n        }\n\n        const src = languageService.getProgram().getSourceFile(info.classFile);\n        ts.forEachChild(src, (n) => {\n            if (n.kind === ts.SyntaxKind.ClassDeclaration) {\n                ts.forEachChild(n, (node) => {\n                    if (node.kind === ts.SyntaxKind.HeritageClause) {\n                        const e = node as ts.HeritageClause;\n\n                        ts.forEachChild(node, (nn) => {\n                            if (e.token === ts.SyntaxKind.ExtendsKeyword) {\n                                if (nn.getText() !== 'App') {\n                                    throw new MustExtendAppError();\n                                }\n                            } else if (e.token === ts.SyntaxKind.ImplementsKeyword) {\n                                result.implemented.doesImplement(nn.getText());\n                            } else {\n                                console.log(e.token, nn.getText());\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        function logErrors(fileName: string) {\n            const allDiagnostics = languageService.getCompilerOptionsDiagnostics()\n                .concat(languageService.getSyntacticDiagnostics(fileName))\n                .concat(languageService.getSemanticDiagnostics(fileName));\n\n            allDiagnostics.forEach((diagnostic) => {\n                const message = ts.flattenDiagnosticMessageText(diagnostic.messageText, '\\n');\n\n                if (diagnostic.file) {\n                    const { line, character } = diagnostic.file.getLineAndCharacterOfPosition(diagnostic.start);\n                    console.log(`  Error ${diagnostic.file.fileName} (${line + 1},${character + 1}): ${message}`);\n                } else {\n                    console.log(`  Error: ${message}`);\n                }\n            });\n        }\n\n        const preEmit = ts.getPreEmitDiagnostics(languageService.getProgram());\n        preEmit.forEach((dia: ts.Diagnostic) => {\n            // Only filter out the typing diagnostics which are something other than errors\n            if (dia.category !== ts.DiagnosticCategory.Error) {\n                return;\n            }\n\n            const msg = ts.flattenDiagnosticMessageText(dia.messageText, '\\n');\n            if (!dia.file) {\n                console.warn(msg);\n                return;\n            }\n\n            const { line, character } = dia.file.getLineAndCharacterOfPosition(dia.start);\n            // console.warn(`  Error ${dia.file.fileName} (${line + 1},${character + 1}): ${msg}`);\n\n            result.compilerErrors.push({\n                file: dia.file.fileName,\n                line,\n                character,\n                message: `${dia.file.fileName} (${line + 1},${character + 1}): ${msg}`,\n            });\n        });\n\n        Object.keys(result.files).forEach((key) => {\n            const file: ICompilerFile = result.files[key];\n            const output: ts.EmitOutput = languageService.getEmitOutput(file.name);\n\n            if (output.emitSkipped) {\n                console.log('Emitting failed for:', file.name);\n                logErrors(file.name);\n            }\n\n            file.compiled = output.outputFiles[0].text;\n        });\n\n        return result;\n    }\n\n    public toSandBox(manager: AppManager, storage: IAppStorageItem): ProxiedApp {\n        const files = this.storageFilesToCompiler(storage.compiled);\n\n        if (typeof files[path.normalize(storage.info.classFile)] === 'undefined') {\n            throw new Error(`Invalid App package for \"${storage.info.name}\". ` +\n                `Could not find the classFile (${storage.info.classFile}) file.`);\n        }\n\n        const customRequire = Utilities.buildCustomRequire(files);\n        const context = vm.createContext({ require: customRequire, exports, process: {}, console });\n\n        const script = new vm.Script(files[path.normalize(storage.info.classFile)].compiled);\n        const result = script.runInContext(context);\n\n        if (typeof result !== 'function') {\n            // tslint:disable-next-line:max-line-length\n            throw new Error(`The App's main class for ${storage.info.name} is not valid (\"${storage.info.classFile}\").`);\n        }\n\n        const appAccessors = new AppAccessors(manager, storage.info.id);\n        const logger = new AppConsole(AppMethod._CONSTRUCTOR);\n        const rl = vm.runInNewContext('new App(info, rcLogger, appAccessors);', vm.createContext({\n            rcLogger: logger,\n            info: storage.info,\n            App: result,\n            process: {},\n            appAccessors,\n        }), { timeout: 1000, filename: `App_${storage.info.nameSlug}.js` });\n\n        if (!(rl instanceof App)) {\n            throw new MustExtendAppError();\n        }\n\n        if (typeof rl.getName !== 'function') {\n            throw new MustContainFunctionError(storage.info.classFile, 'getName');\n        }\n\n        if (typeof rl.getNameSlug !== 'function') {\n            throw new MustContainFunctionError(storage.info.classFile, 'getNameSlug');\n        }\n\n        if (typeof rl.getVersion !== 'function') {\n            throw new MustContainFunctionError(storage.info.classFile, 'getVersion');\n        }\n\n        if (typeof rl.getID !== 'function') {\n            throw new MustContainFunctionError(storage.info.classFile, 'getID');\n        }\n\n        if (typeof rl.getDescription !== 'function') {\n            throw new MustContainFunctionError(storage.info.classFile, 'getDescription');\n        }\n\n        if (typeof rl.getRequiredApiVersion !== 'function') {\n            throw new MustContainFunctionError(storage.info.classFile, 'getRequiredApiVersion');\n        }\n\n        const app = new ProxiedApp(manager, storage, rl as App, customRequire);\n\n        manager.getLogStorage().storeEntries(app.getID(), logger);\n\n        return app;\n    }\n\n    private isValidFile(file: ICompilerFile): boolean {\n        if (!file || !file.name || !file.content) {\n            return false;\n        }\n\n        return file.name.trim() !== ''\n            && path.normalize(file.name)\n            && file.content.trim() !== '';\n    }\n}\n"]}