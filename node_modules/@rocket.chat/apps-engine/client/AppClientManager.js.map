{"version":3,"sources":["src/client/AppClientManager.ts"],"names":[],"mappings":";;;;;;;;;;AAEA,mEAAgE;AAEhE;IAGI,YAA6B,YAAmC;QAAnC,iBAAY,GAAZ,YAAY,CAAuB;QAC5D,IAAI,CAAC,CAAC,YAAY,YAAY,6CAAqB,CAAC,EAAE;YAClD,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;SACzE;QAED,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,EAAY,CAAC;IACtC,CAAC;IAEY,IAAI;;YACZ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;YACrD,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7C,CAAC;KAAA;CACJ;AAfD,4CAeC","file":"AppClientManager.js","sourcesContent":["import { IAppInfo } from '../definition/metadata';\n\nimport { AppServerCommunicator } from './AppServerCommunicator';\n\nexport class AppClientManager {\n    private apps: Array<IAppInfo>;\n\n    constructor(private readonly communicator: AppServerCommunicator) {\n        if (!(communicator instanceof AppServerCommunicator)) {\n            throw new Error('The communicator must extend AppServerCommunicator');\n        }\n\n        this.apps = new Array<IAppInfo>();\n    }\n\n    public async load(): Promise<void> {\n         this.apps = await this.communicator.getEnabledApps();\n         console.log('Enabled apps:', this.apps);\n    }\n}\n"]}